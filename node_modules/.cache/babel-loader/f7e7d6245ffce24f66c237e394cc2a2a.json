{"remainingRequest":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/babel-loader/lib/index.js!/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/eslint-loader/index.js??ref--14-0!/Users/cheynehayworth/projects/bbfusedash/dashboard/src/store/index.js","dependencies":[{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/src/store/index.js","mtime":1649036579735},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1646000871065},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/babel-loader/lib/index.js","mtime":1649901810314},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/eslint-loader/index.js","mtime":1650102989344}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVnVleCBmcm9tICJ2dWV4IjsKaW1wb3J0IGNyZWF0ZVBlcnNpc3RlZFN0YXRlIGZyb20gInZ1ZXgtcGVyc2lzdGVkc3RhdGUiOwppbXBvcnQgeyBXYWxsZXRUeXBlIH0gZnJvbSAiLi4vTWV0YW1hc2tTZXJ2aWNlIjsKVnVlLnVzZShWdWV4KTsKY29uc3Qgc3RvcmUgPSBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIHNpZ25lckFkZHJlc3M6IG51bGwsCiAgICBjb250cmFjdDogbnVsbCwKICAgIHdhbGxldFByb3ZpZGVyVHlwZTogbnVsbAogIH0sCiAgbXV0YXRpb25zOiB7CiAgICB1cGRhdGVTaWduZXJBZGRyZXNzKHN0YXRlLCBhZGRyZXNzKSB7CiAgICAgIHN0YXRlLnNpZ25lckFkZHJlc3MgPSBhZGRyZXNzOwogICAgfSwKCiAgICB1cGRhdGVDb250cmFjdChzdGF0ZSwgY29udHJhY3QpIHsKICAgICAgc3RhdGUuY29udHJhY3QgPSBjb250cmFjdDsKICAgIH0sCgogICAgdXBkYXRlV2FsbGV0UHJvdmlkZXJUeXBlKHN0YXRlLCB3YWxsZXRQcm92aWRlclR5cGUpIHsKICAgICAgc3RhdGUud2FsbGV0UHJvdmlkZXJUeXBlID0gd2FsbGV0UHJvdmlkZXJUeXBlOwogICAgfSwKCiAgICBsb2dvdXQ6IHN0YXRlID0+IHsKICAgICAgc3RhdGUuc2lnbmVyQWRkcmVzcyA9IG51bGw7CiAgICAgIHN0YXRlLndhbGxldFByb3ZpZGVyVHlwZSA9IG51bGw7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBzaWduZXJBZGRyZXNzOiBzdGF0ZSA9PiBzdGF0ZS5zaWduZXJBZGRyZXNzLAogICAgd2FsbGV0UHJvdmlkZXJUeXBlOiBzdGF0ZSA9PiBzdGF0ZS53YWxsZXRQcm92aWRlclR5cGUKICB9LAogIGFjdGlvbnM6IHsKICAgIGFzeW5jIGxvYWRDb250cmFjdEluZm8oY29udGV4dCkge30gLy8gaW5pdEN1cnJlbmNpZXMoY29udGV4dCkgewogICAgLy8gICByZXR1cm4gYXhpb3MuZ2V0KCIvYXBpL2N1cnJlbmNpZXMiKS50aGVuKHJlc3BvbnNlID0+IHsKICAgIC8vICAgICBjb250ZXh0LmNvbW1pdCgic2V0Q3VycmVuY2llcyIsIHJlc3BvbnNlLmRhdGEpOwogICAgLy8gICB9KTsKICAgIC8vIH0sCgoKICB9LAogIHBsdWdpbnM6IFtjcmVhdGVQZXJzaXN0ZWRTdGF0ZSgpXQp9KTsKZXhwb3J0IGRlZmF1bHQgc3RvcmU7"},{"version":3,"sources":["/Users/cheynehayworth/projects/bbfusedash/dashboard/src/store/index.js"],"names":["Vue","Vuex","createPersistedState","WalletType","use","store","Store","state","signerAddress","contract","walletProviderType","mutations","updateSignerAddress","address","updateContract","updateWalletProviderType","logout","getters","actions","loadContractInfo","context","plugins"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAGAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,MAAMI,KAAK,GAAG,IAAIJ,IAAI,CAACK,KAAT,CAAe;AAC3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE,IADV;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,kBAAkB,EAAG;AAHhB,GADoB;AAM3BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,mBAAmB,CAACL,KAAD,EAAQM,OAAR,EAAiB;AAClCN,MAAAA,KAAK,CAACC,aAAN,GAAsBK,OAAtB;AACD,KAHQ;;AAITC,IAAAA,cAAc,CAACP,KAAD,EAAQE,QAAR,EAAkB;AAC9BF,MAAAA,KAAK,CAACE,QAAN,GAAiBA,QAAjB;AACD,KANQ;;AAOTM,IAAAA,wBAAwB,CAACR,KAAD,EAAQG,kBAAR,EAA4B;AAClDH,MAAAA,KAAK,CAACG,kBAAN,GAA2BA,kBAA3B;AACD,KATQ;;AAUTM,IAAAA,MAAM,EAAET,KAAK,IAAI;AACfA,MAAAA,KAAK,CAACC,aAAN,GAAsB,IAAtB;AACAD,MAAAA,KAAK,CAACG,kBAAN,GAA2B,IAA3B;AACD;AAbQ,GANgB;AAqB3BO,EAAAA,OAAO,EAAE;AACPT,IAAAA,aAAa,EAAED,KAAK,IAAIA,KAAK,CAACC,aADvB;AAEPE,IAAAA,kBAAkB,EAAEH,KAAK,IAAIA,KAAK,CAACG;AAF5B,GArBkB;AA0B3BQ,EAAAA,OAAO,EAAE;AACP,UAAMC,gBAAN,CAAuBC,OAAvB,EAAgC,CAAE,CAD3B,CAEP;AACA;AACA;AACA;AACA;;;AANO,GA1BkB;AAkC3BC,EAAAA,OAAO,EAAE,CAACnB,oBAAoB,EAArB;AAlCkB,CAAf,CAAd;AAqCA,eAAeG,KAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport createPersistedState from \"vuex-persistedstate\";\nimport { WalletType } from \"../MetamaskService\";\n\n\nVue.use(Vuex);\n\nconst store = new Vuex.Store({\n  state: {\n    signerAddress: null,\n    contract: null,\n    walletProviderType : null,\n  },\n  mutations: {\n    updateSignerAddress(state, address) {\n      state.signerAddress = address;\n    },\n    updateContract(state, contract) {\n      state.contract = contract;\n    },\n    updateWalletProviderType(state, walletProviderType) {\n      state.walletProviderType = walletProviderType;\n    },\n    logout: state => {\n      state.signerAddress = null;\n      state.walletProviderType = null;\n    },\n  },\n  getters: {\n    signerAddress: state => state.signerAddress,\n    walletProviderType: state => state.walletProviderType,\n\n  },\n  actions: {\n    async loadContractInfo(context) {},\n    // initCurrencies(context) {\n    //   return axios.get(\"/api/currencies\").then(response => {\n    //     context.commit(\"setCurrencies\", response.data);\n    //   });\n    // },\n  },\n  plugins: [createPersistedState()],\n});\n\nexport default store;\n"]}]}