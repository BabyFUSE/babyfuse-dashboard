{"remainingRequest":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/thread-loader/dist/cjs.js!/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/babel-loader/lib/index.js!/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cheynehayworth/projects/bbfusedash/dashboard/src/components/Dashboard/Statistic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/src/components/Dashboard/Statistic.vue","mtime":1649053294305},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1649036669776},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1649036668473},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/babel-loader/lib/index.js","mtime":1649036668310},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1649036669776},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/vue-loader/lib/index.js","mtime":1649036669290}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgQ09OVFJBQ1RfQUREUkVTUywgQlVSTl9BRERSRVNTIH0gZnJvbSAiQC9jb25zdGFudHMiOwppbXBvcnQgTWV0YW1hc2tTZXJ2aWNlIGZyb20gIkAvTWV0YW1hc2tTZXJ2aWNlIjsKaW1wb3J0IHsgZXRoZXJzLCB1dGlscyB9IGZyb20gImV0aGVycyI7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTdGF0aXN0aWMiLAogIHByb3BzOiB7CiAgICBjb250cmFjdDogewogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgaHVuZHJlZHRob3VzYW5kbWthdHVzZDogewogICAgICBkZWZhdWx0OiAiLi4uIgogICAgfSwKICAgIHRvdGFsbGlxdWlkaXR5cG9vbHVzZDogewogICAgICBkZWZhdWx0OiAiLi4uIgogICAgfSwKICAgIHRvdGFsYm5iaW5wb29sOiB7CiAgICAgIGRlZmF1bHQ6ICIuLi4iCiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1rYXRBZGRyZXNzOiBDT05UUkFDVF9BRERSRVNTLAogICAgICBtYXJrZXRDYXA6ICIuLi4iLAogICAgICBjdXJyZW50Q2lyY3VsYXJpbmdCYWxhbmNlOiAiLi4uIiwKICAgICAgY29udHJhY3RCTkJSZXdhcmRQb29sOiAiLi4uIiwKICAgICAgcHJvdmlkZXI6IG51bGwsCiAgICAgIHRvdGFsQnVybjogIi4uLiIsCiAgICAgIHRva2VuU3ltYm9sOiAiIgogICAgfTsKICB9LAoKICBjb21wdXRlZDogeyAuLi5tYXBHZXR0ZXJzKFsic2lnbmVyQWRkcmVzcyJdKSwKICAgIC4uLm1hcEdldHRlcnMoWyJ3YWxsZXRQcm92aWRlclR5cGUiXSkKICB9LAoKICBhc3luYyBtb3VudGVkKCkgewogICAgdGhpcy4kbG9hZGluZyh0cnVlKTsKICAgIHRoaXMubG9hZENvbnRyYWN0SW5mbygpOwogICAgdGhpcy4kbG9hZGluZyhmYWxzZSk7CiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgbG9hZENvbnRyYWN0SW5mbygpIHsKICAgICAgY29uc29sZS5sb2coInN0YXRpc3RpY3MgbG9hZGluZyIpOwogICAgICBjb25zdCBzZXJ2aWNlID0gbmV3IE1ldGFtYXNrU2VydmljZShhd2FpdCBNZXRhbWFza1NlcnZpY2UuY3JlYXRlV2FsbGV0UHJvdmlkZXJGcm9tVHlwZSh0aGlzLndhbGxldFByb3ZpZGVyVHlwZSkpOwogICAgICBhd2FpdCBzZXJ2aWNlLmluaXRpYWxpemUoKTsKICAgICAgdGhpcy5wcm92aWRlciA9IHNlcnZpY2UuZ2V0V2ViM1Byb3ZpZGVyKCk7CiAgICAgIHRoaXMudG9rZW5TeW1ib2wgPSBhd2FpdCB0aGlzLmNvbnRyYWN0LnN5bWJvbCgpOwogICAgICB0aGlzLm1hcmtldENhcCA9IHBhcnNlRmxvYXQoYXdhaXQgdGhpcy5jYWxjdWxhdGVNYXJrZXRDYXAoc2VydmljZSkpLnRvRml4ZWQoMik7CiAgICAgIHRoaXMudG90YWxCdXJuID0gYXdhaXQgdGhpcy5jYWxjdWxhdGVUb3RhbEJ1cm5QZXJjZW50KHNlcnZpY2UpOwogICAgICB0aGlzLmN1cnJlbnRDaXJjdWxhcmluZ0JhbGFuY2UgPSBwYXJzZUZsb2F0KHV0aWxzLmZvcm1hdFVuaXRzKGF3YWl0IHRoaXMuZ2V0Q3VycmVudENpcmN1bGFyaW5nQmFsYW5jZSgpLCAxOCkpLnRvRml4ZWQoMik7CiAgICAgIGNvbnN0IGNha2VUb2tlbkNvbnRyYWN0ID0gYXdhaXQgc2VydmljZS5nZXRDYWtlVG9rZW5Db250cmFjdEluc3RhbmNlKENPTlRSQUNUX0FERFJFU1MpOwogICAgICB0aGlzLmNvbnRyYWN0Qk5CUmV3YXJkUG9vbCA9IHBhcnNlRmxvYXQodXRpbHMuZm9ybWF0VW5pdHMoYXdhaXQgY2FrZVRva2VuQ29udHJhY3QuYmFsYW5jZU9mKENPTlRSQUNUX0FERFJFU1MpLCAxOCkpLnRvRml4ZWQoMik7CiAgICB9LAoKICAgIGFzeW5jIGNhbGN1bGF0ZU1hcmtldENhcChzZXJ2aWNlKSB7CiAgICAgIGNvbnN0IGNpcmN1bGFyaW5nQmFsYW5jZSA9IGF3YWl0IHRoaXMuZ2V0Q3VycmVudENpcmN1bGFyaW5nQmFsYW5jZSgpOwogICAgICByZXR1cm4gdXRpbHMuZm9ybWF0VW5pdHMoYXdhaXQgc2VydmljZS5nZXRNa2F0VmFsdWVJbkJVU0QoY2lyY3VsYXJpbmdCYWxhbmNlKSwgMTgpOwogICAgfSwKCiAgICBhc3luYyBjYWxjdWxhdGVUb3RhbEJ1cm5QZXJjZW50KCkgewogICAgICBjb25zdCB7CiAgICAgICAgdG90YWwsCiAgICAgICAgemVybywKICAgICAgICBidXJuCiAgICAgIH0gPSBhd2FpdCB0aGlzLmdldENpcmN1bGFyaW5nQmFsYW5jZXMoKTsKICAgICAgcmV0dXJuICgoemVybyArIGJ1cm4pICogMTAwIC8gdG90YWwpLnRvRml4ZWQoMik7CiAgICB9LAoKICAgIGFzeW5jIGdldEN1cnJlbnRDaXJjdWxhcmluZ0JhbGFuY2UoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICB0b3RhbCwKICAgICAgICB6ZXJvLAogICAgICAgIGJ1cm4KICAgICAgfSA9IGF3YWl0IHRoaXMuZ2V0Q2lyY3VsYXJpbmdCYWxhbmNlcygpOwogICAgICByZXR1cm4gdG90YWwuc3ViKGJ1cm4pLnN1Yih6ZXJvKTsKICAgIH0sCgogICAgYXN5bmMgZ2V0Q2lyY3VsYXJpbmdCYWxhbmNlcygpIHsKICAgICAgbGV0IHRvdGFsID0gYXdhaXQgdGhpcy5jb250cmFjdC50b3RhbFN1cHBseSgpOwogICAgICBsZXQgemVybyA9IGF3YWl0IHRoaXMuY29udHJhY3QuYmFsYW5jZU9mKCIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiKTsKICAgICAgbGV0IGJ1cm4gPSBhd2FpdCB0aGlzLmNvbnRyYWN0LmJhbGFuY2VPZihCVVJOX0FERFJFU1MpOwogICAgICByZXR1cm4gewogICAgICAgIHRvdGFsLAogICAgICAgIHplcm8sCiAgICAgICAgYnVybgogICAgICB9OwogICAgfQoKICB9Cn07"},{"version":3,"sources":["Statistic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA,SAAA,gBAAA,EAAA,YAAA,QAAA,aAAA;AACA,OAAA,eAAA,MAAA,mBAAA;AACA,SAAA,MAAA,EAAA,KAAA,QAAA,QAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA,KADA;AAIA,IAAA,sBAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA,KAJA;AAOA,IAAA,qBAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA,KAPA;AAUA,IAAA,cAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA;AAVA,GAFA;;AAgBA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,gBADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,yBAAA,EAAA,KAHA;AAIA,MAAA,qBAAA,EAAA,KAJA;AAKA,MAAA,QAAA,EAAA,IALA;AAMA,MAAA,SAAA,EAAA,KANA;AAOA,MAAA,WAAA,EAAA;AAPA,KAAA;AASA,GA1BA;;AA2BA,EAAA,QAAA,EAAA,EACA,GAAA,UAAA,CAAA,CAAA,eAAA,CAAA,CADA;AAEA,OAAA,UAAA,CAAA,CAAA,oBAAA,CAAA;AAFA,GA3BA;;AA+BA,QAAA,OAAA,GAAA;AACA,SAAA,QAAA,CAAA,IAAA;AACA,SAAA,gBAAA;AACA,SAAA,QAAA,CAAA,KAAA;AACA,GAnCA;;AAoCA,EAAA,OAAA,EAAA;AACA,UAAA,gBAAA,GAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,oBAAA;AAEA,YAAA,OAAA,GAAA,IAAA,eAAA,CAAA,MAAA,eAAA,CAAA,4BAAA,CAAA,KAAA,kBAAA,CAAA,CAAA;AACA,YAAA,OAAA,CAAA,UAAA,EAAA;AAEA,WAAA,QAAA,GAAA,OAAA,CAAA,eAAA,EAAA;AAEA,WAAA,WAAA,GAAA,MAAA,KAAA,QAAA,CAAA,MAAA,EAAA;AAEA,WAAA,SAAA,GAAA,UAAA,CAAA,MAAA,KAAA,kBAAA,CAAA,OAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AAEA,WAAA,SAAA,GAAA,MAAA,KAAA,yBAAA,CAAA,OAAA,CAAA;AAEA,WAAA,yBAAA,GAAA,UAAA,CACA,KAAA,CAAA,WAAA,CAAA,MAAA,KAAA,4BAAA,EAAA,EAAA,EAAA,CADA,CAAA,CAEA,OAFA,CAEA,CAFA,CAAA;AAIA,YAAA,iBAAA,GAAA,MAAA,OAAA,CAAA,4BAAA,CAAA,gBAAA,CAAA;AACA,WAAA,qBAAA,GAAA,UAAA,CACA,KAAA,CAAA,WAAA,CAAA,MAAA,iBAAA,CAAA,SAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,CADA,CAAA,CAEA,OAFA,CAEA,CAFA,CAAA;AAGA,KAvBA;;AAwBA,UAAA,kBAAA,CAAA,OAAA,EAAA;AACA,YAAA,kBAAA,GAAA,MAAA,KAAA,4BAAA,EAAA;AAEA,aAAA,KAAA,CAAA,WAAA,CAAA,MAAA,OAAA,CAAA,kBAAA,CAAA,kBAAA,CAAA,EAAA,EAAA,CAAA;AACA,KA5BA;;AA6BA,UAAA,yBAAA,GAAA;AACA,YAAA;AAAA,QAAA,KAAA;AAAA,QAAA,IAAA;AAAA,QAAA;AAAA,UAAA,MAAA,KAAA,sBAAA,EAAA;AACA,aAAA,CAAA,CAAA,IAAA,GAAA,IAAA,IAAA,GAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,KAhCA;;AAiCA,UAAA,4BAAA,GAAA;AACA,YAAA;AAAA,QAAA,KAAA;AAAA,QAAA,IAAA;AAAA,QAAA;AAAA,UAAA,MAAA,KAAA,sBAAA,EAAA;AACA,aAAA,KAAA,CAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,IAAA,CAAA;AACA,KApCA;;AAqCA,UAAA,sBAAA,GAAA;AACA,UAAA,KAAA,GAAA,MAAA,KAAA,QAAA,CAAA,WAAA,EAAA;AACA,UAAA,IAAA,GAAA,MAAA,KAAA,QAAA,CAAA,SAAA,CAAA,4CAAA,CAAA;AACA,UAAA,IAAA,GAAA,MAAA,KAAA,QAAA,CAAA,SAAA,CAAA,YAAA,CAAA;AAEA,aAAA;AAAA,QAAA,KAAA;AAAA,QAAA,IAAA;AAAA,QAAA;AAAA,OAAA;AACA;;AA3CA;AApCA,CAAA","sourcesContent":["<template>\n  <div class=\"statistic-all\">\n    <div class=\"statistic-p1\">\n      <div class=\"row\">\n        <div class=\"item-statistic col-sm-6 col-md-3\">\n          <div class=\"text-1\">Symbol</div>\n          <div class=\"text-2\">{{ tokenSymbol }}</div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-sm-0\">\n          <div class=\"text-1\">Total Supply</div>\n          <div class=\"text-2\">100,000,000,000 {{ tokenSymbol }}</div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-md-0\">\n          <div class=\"text-1\">Total Burned</div>\n          <div class=\"text-2\">{{ totalBurn }} %</div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-md-0\">\n          <div class=\"text-1\">Token Address</div>\n          <div class=\"text-2\">\n            <a\n              :href=\"`https://explorer.fuse.io/token/${mkatAddress}`\"\n              target=\"_blank\"\n              style=\"color: rgb(5, 0, 111)); font-size: 20px; word-break: break-all\"\n            >\n              view on Fuse Explorer\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"row-2 hide-on-mobile\"></div>\n      <div class=\"row\">\n        <div class=\"item-statistic col-sm-6 col-md-3\">\n          <div class=\"text-1\">Volume (24h)</div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-sm-0\">\n          <div class=\"text-1\">Market Cap</div>\n          <div class=\"text-2\">\n            $\n            <span class=\"card-panel-num\"> {{ marketCap }} </span>\n          </div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-md-0\">\n          <div class=\"text-1\">Current Circulating Supply</div>\n          <div class=\"text-2\">{{ currentCircularingBalance }} {{ tokenSymbol }}</div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-md-0\">\n          <div class=\"text-1\">Contract USDC reward pool</div>\n          <div class=\"text-2\">{{ contractBNBRewardPool }} FUSE</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"statistic-p1 mt-25\">\n      <div class=\"row\">\n        <div class=\"item-statistic col-sm-6 col-md-3\">\n          <div class=\"text-1\">100,000 {{ tokenSymbol }} price</div>\n          <div class=\"text-2\">\n            <span class=\"card-panel-num\">$ {{ hundredthousandmkatusd }} </span>\n          </div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-sm-0\">\n          <div class=\"text-1\">Total Liquidity Pool</div>\n          <div class=\"text-2\">\n            <span class=\"card-panel-num\"> $ {{ totalliquiditypoolusd }} </span>\n          </div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-md-0\">\n          <div class=\"text-1\">Total FUSE in liquidity pool</div>\n          <div class=\"text-2\">{{ totalbnbinpool }} FUSE</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"hidden-input el-input el-input--medium\">\n      <input id=\"copy-value-max\" type=\"text\" autocomplete=\"off\" class=\"el-input__inner\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { CONTRACT_ADDRESS, BURN_ADDRESS } from \"@/constants\";\nimport MetamaskService from \"@/MetamaskService\";\nimport { ethers, utils } from \"ethers\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"Statistic\",\n  props: {\n    contract: {\n      default: null,\n    },\n    hundredthousandmkatusd: {\n      default: \"...\",\n    },\n    totalliquiditypoolusd: {\n      default: \"...\",\n    },\n    totalbnbinpool: {\n      default: \"...\",\n    },\n  },\n  data() {\n    return {\n      mkatAddress: CONTRACT_ADDRESS,\n      marketCap: \"...\",\n      currentCircularingBalance: \"...\",\n      contractBNBRewardPool: \"...\",\n      provider: null,\n      totalBurn: \"...\",\n      tokenSymbol: \"\",\n    };\n  },\n  computed: {\n    ...mapGetters([\"signerAddress\"]),\n    ...mapGetters([\"walletProviderType\"]),\n  },\n  async mounted() {\n    this.$loading(true);\n    this.loadContractInfo();\n    this.$loading(false);\n  },\n  methods: {\n    async loadContractInfo() {\n      console.log(\"statistics loading\");\n\n      const service = new MetamaskService(await MetamaskService.createWalletProviderFromType(this.walletProviderType));\n      await service.initialize();\n\n      this.provider = service.getWeb3Provider();\n\n      this.tokenSymbol = await this.contract.symbol();\n\n      this.marketCap = parseFloat(await this.calculateMarketCap(service)).toFixed(2);\n\n      this.totalBurn = await this.calculateTotalBurnPercent(service);\n\n      this.currentCircularingBalance = parseFloat(\n        utils.formatUnits(await this.getCurrentCircularingBalance(), 18)\n      ).toFixed(2);\n\n      const cakeTokenContract = await service.getCakeTokenContractInstance(CONTRACT_ADDRESS);\n      this.contractBNBRewardPool = parseFloat(\n        utils.formatUnits(await cakeTokenContract.balanceOf(CONTRACT_ADDRESS), 18)\n      ).toFixed(2);\n    },\n    async calculateMarketCap(service) {\n      const circularingBalance = await this.getCurrentCircularingBalance();\n\n      return utils.formatUnits(await service.getMkatValueInBUSD(circularingBalance), 18);\n    },\n    async calculateTotalBurnPercent() {\n      const { total, zero, burn } = await this.getCircularingBalances();\n      return (((zero + burn) * 100) / total).toFixed(2);\n    },\n    async getCurrentCircularingBalance() {\n      const { total, zero, burn } = await this.getCircularingBalances();\n      return total.sub(burn).sub(zero);\n    },\n    async getCircularingBalances() {\n      let total = await this.contract.totalSupply();\n      let zero = await this.contract.balanceOf(\"0x0000000000000000000000000000000000000000\");\n      let burn = await this.contract.balanceOf(BURN_ADDRESS);\n\n      return { total, zero, burn };\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components/Dashboard"}]}