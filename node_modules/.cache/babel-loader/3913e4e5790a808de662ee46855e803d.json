{"remainingRequest":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/thread-loader/dist/cjs.js!/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/babel-loader/lib/index.js!/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cheynehayworth/projects/bbfusedash/dashboard/src/components/WalletConnect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/src/components/WalletConnect.vue","mtime":1649055114367},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1649036669776},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1649036668473},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/babel-loader/lib/index.js","mtime":1649036668310},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1649036669776},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/vue-loader/lib/index.js","mtime":1649036669290}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSAiZXRoZXJzIjsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gInZ1ZXgiOwppbXBvcnQgV2FsbGV0Q29ubmVjdFByb3ZpZGVyIGZyb20gIkB3YWxsZXRjb25uZWN0L3dlYjMtcHJvdmlkZXIiOwppbXBvcnQgeyBXYWxsZXRUeXBlIH0gZnJvbSAiLi4vTWV0YW1hc2tTZXJ2aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJXYWxsZXRDb25uZWN0IiwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzTW9iaWxlOiBmYWxzZQogICAgfTsKICB9LAoKICBjb21wdXRlZDogeyAuLi5tYXBHZXR0ZXJzKFsic2lnbmVyQWRkcmVzcyJdKSwKICAgIC4uLm1hcEdldHRlcnMoWyJ3YWxsZXRQcm92aWRlclR5cGUiXSkKICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy5kZXRlY3RNb2JpbGUoKTsKICAgIGNvbnNvbGUubG9nKCJTaWduZXIgYWRkcmVzcyIsIHRoaXMuc2lnbmVyQWRkcmVzcyk7CgogICAgaWYgKHRoaXMuc2lnbmVyQWRkcmVzcyAmJiB0aGlzLndhbGxldFByb3ZpZGVyVHlwZSkgewogICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7CiAgICAgICAgcGF0aDogImRhc2hib2FyZCIKICAgICAgfSk7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgY29ubmVjdE1ldGFtYXNrKCkgewogICAgICBpZiAod2luZG93LmV0aGVyZXVtICE9IHVuZGVmaW5lZCkgewogICAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgd2luZG93LmV0aGVyZXVtLnJlcXVlc3QoewogICAgICAgICAgbWV0aG9kOiAiZXRoX3JlcXVlc3RBY2NvdW50cyIKICAgICAgICB9KTsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoInVwZGF0ZVNpZ25lckFkZHJlc3MiLCBhY2NvdW50c1swXSk7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJ1cGRhdGVXYWxsZXRQcm92aWRlclR5cGUiLCBXYWxsZXRUeXBlLk1ldGFtYXNrKTsKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBwYXRoOiAiZGFzaGJvYXJkIgogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGlmICghdGhpcy5pc0FuZHJvaWQgJiYgIXRoaXMuaXNJb3MpIGFsZXJ0KCJQbGVhc2UgaW5zdGFsbCBNZXRhTWFzayEiKTsKICAgICAgfQogICAgfSwKCiAgICBhc3luYyBjb25uZWN0V2FsbGV0Q29ubmVjdCgpIHsKICAgICAgY29uc3Qgd2FsbGV0Q29ubmVjdFByb3ZpZGVyID0gbmV3IFdhbGxldENvbm5lY3RQcm92aWRlcih7CiAgICAgICAgcnBjOiB7CiAgICAgICAgICA1NjogImh0dHBzOi8vYnNjLWRhdGFzZWVkLmJpbmFuY2Uub3JnLyIKICAgICAgICB9LAogICAgICAgIGNoYWluSWQ6IDU2LAogICAgICAgIHFyY29kZTogdHJ1ZSAvLyBSZXF1aXJlZAoKICAgICAgfSk7CiAgICAgIGF3YWl0IHdhbGxldENvbm5lY3RQcm92aWRlci5lbmFibGUoKTsKICAgICAgYXdhaXQgdGhpcy51cGRhdGVEYXRhT25BY2NvdW50Q2hhbmdlKHdhbGxldENvbm5lY3RQcm92aWRlcik7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAiZGFzaGJvYXJkIgogICAgICB9KTsgLy8gU3Vic2NyaWJlIHRvIGFjY291bnRzIGNoYW5nZQoKICAgICAgd2FsbGV0Q29ubmVjdFByb3ZpZGVyLm9uKCJhY2NvdW50c0NoYW5nZWQiLCBhY2NvdW50cyA9PiB7CiAgICAgICAgdGhpcy51cGRhdGVEYXRhT25BY2NvdW50Q2hhbmdlKHdhbGxldENvbm5lY3RQcm92aWRlcik7CiAgICAgIH0pOyAvLyBTdWJzY3JpYmUgdG8gY2hhaW5JZCBjaGFuZ2UKCiAgICAgIHdhbGxldENvbm5lY3RQcm92aWRlci5vbigiY2hhaW5DaGFuZ2VkIiwgY2hhaW5JZCA9PiB7CiAgICAgICAgY29uc29sZS5sb2coImNoYWluIGNoYW5nZWQ6ICIsIGNoYWluSWQpOwogICAgICB9KTsgLy8gU3Vic2NyaWJlIHRvIHNlc3Npb24gZGlzY29ubmVjdGlvbgoKICAgICAgd2FsbGV0Q29ubmVjdFByb3ZpZGVyLm9uKCJkaXNjb25uZWN0IiwgKGNvZGUsIHJlYXNvbikgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCJEaXNjb25uZWN0IiwgcmVhc29uKTsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoImxvZ291dCIpOwogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgIHBhdGg6ICJjb25uZWN0LXdhbGxldCIKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAoKICAgIGFzeW5jIHVwZGF0ZURhdGFPbkFjY291bnRDaGFuZ2Uod2FsbGV0Q29ubmVjdFByb3ZpZGVyKSB7CiAgICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKHdhbGxldENvbm5lY3RQcm92aWRlcik7CiAgICAgIGNvbnNvbGUubG9nKCJ3ZWIzIHByb3ZpZGVyOiIsIHByb3ZpZGVyKTsKICAgICAgY29uc29sZS5sb2coIndhbGxldCBwcm92aWRlcjoiLCB3YWxsZXRDb25uZWN0UHJvdmlkZXIpOwogICAgICBjb25zdCBzaWduZXIgPSBwcm92aWRlci5nZXRTaWduZXIoKTsKICAgICAgY29uc29sZS5sb2coInNpZ25lcjoiLCBzaWduZXIpOwogICAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgc2lnbmVyLmdldEFkZHJlc3MoKTsKICAgICAgY29uc29sZS5sb2coInNpZ25lciBhZGRyZXNzOiIsIGFkZHJlc3MpOwogICAgICB0aGlzLiRzdG9yZS5jb21taXQoInVwZGF0ZVNpZ25lckFkZHJlc3MiLCBhZGRyZXNzKTsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJ1cGRhdGVXYWxsZXRQcm92aWRlclR5cGUiLCBXYWxsZXRUeXBlLldhbGxldENvbm5lY3QpOwogICAgfSwKCiAgICBkZXRlY3RNb2JpbGUoKSB7CiAgICAgIGlmICgvQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpIHsKICAgICAgICB0aGlzLmlzTW9iaWxlID0gdHJ1ZTsKICAgICAgfQogICAgfQoKICB9Cn07"},{"version":3,"sources":["WalletConnect.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section class=\"connect-wallet\">\n    <div class=\"logo\">\n      <img src=\"@/assets/images/beaglecakeLogo.png\" class=\"logo-section\" />\n      <h1 class=\"logo-title\">babyfuse</h1>\n    </div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"section-2\">\n          <div class=\"connect-to-wallet\">\n            <img src=\"@/assets/images/beaglecakeLogo.png\" class=\"logo-section\" />\n            <div class=\"text-show-1\">Welcome to the Baby Fuse Dapp</div>\n            <div class=\"content-main\">\n              <div class=\"text-1\">You are not connected to Baby Fuse Dapp yet</div>\n              <div class=\"line-2\">\n                To use the Dapp, make sure: <br /><span\n                  >You are using the <span class=\"text-color\">Fuse Network</span> network</span\n                ><br /><span>and you need to connect wallet to use</span><br />\n                <div style=\"margin-top: 40px;\">\n                  <a href=\"https://tutorials.fuse.io/tutorials/network-tutorials/adding-fuse-network-to-metamask\" target=\"_blank\"> Metamask</a\n                  ><br />\n                </div>\n              </div>\n            </div>\n            <div class=\"button-wrapper\">\n              <button\n                id=\"connectBtn\"\n                type=\"button\"\n                class=\"el-button button-custom-new el-button--primary el-button--medium\"\n                @click=\"connectMetamask()\"\n              >\n                <i class=\"el-icon-connection\"></i>\n                <span>Connect to a wallet </span>\n              </button>\n              <br />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { ethers } from \"ethers\";\nimport { mapGetters } from \"vuex\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { WalletType } from \"../MetamaskService\";\n\nexport default {\n  name: \"WalletConnect\",\n\n  data() {\n    return {\n      isMobile: false,\n    };\n  },\n  computed: {\n    ...mapGetters([\"signerAddress\"]),\n    ...mapGetters([\"walletProviderType\"]),\n  },\n  mounted() {\n    this.detectMobile();\n\n    console.log(\"Signer address\", this.signerAddress);\n\n    if (this.signerAddress && this.walletProviderType) {\n      this.$router.replace({ path: \"dashboard\" });\n    }\n  },\n  methods: {\n    async connectMetamask() {\n      if (window.ethereum != undefined) {\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        this.$store.commit(\"updateSignerAddress\", accounts[0]);\n        this.$store.commit(\"updateWalletProviderType\", WalletType.Metamask);\n\n        this.$router.push({ path: \"dashboard\" });\n      } else {\n        if (!this.isAndroid && !this.isIos) alert(\"Please install MetaMask!\");\n      }\n    },\n    async connectWalletConnect() {\n      const walletConnectProvider = new WalletConnectProvider({\n        rpc: { 56: \"https://bsc-dataseed.binance.org/\" },\n        chainId: 56,\n        qrcode: true, // Required\n      });\n\n      await walletConnectProvider.enable();\n\n      await this.updateDataOnAccountChange(walletConnectProvider);\n\n      this.$router.push({ path: \"dashboard\" });\n\n      // Subscribe to accounts change\n      walletConnectProvider.on(\"accountsChanged\", accounts => {\n        this.updateDataOnAccountChange(walletConnectProvider);\n      });\n\n      // Subscribe to chainId change\n      walletConnectProvider.on(\"chainChanged\", chainId => {\n        console.log(\"chain changed: \", chainId);\n      });\n\n      // Subscribe to session disconnection\n      walletConnectProvider.on(\"disconnect\", (code, reason) => {\n        console.log(\"Disconnect\", reason);\n\n        this.$store.commit(\"logout\");\n        this.$router.push({ path: \"connect-wallet\" });\n      });\n    },\n    async updateDataOnAccountChange(walletConnectProvider) {\n      const provider = new ethers.providers.Web3Provider(walletConnectProvider);\n\n      console.log(\"web3 provider:\", provider);\n      console.log(\"wallet provider:\", walletConnectProvider);\n\n      const signer = provider.getSigner();\n      console.log(\"signer:\", signer);\n      const address = await signer.getAddress();\n\n      console.log(\"signer address:\", address);\n\n      this.$store.commit(\"updateSignerAddress\", address);\n      this.$store.commit(\"updateWalletProviderType\", WalletType.WalletConnect);\n    },\n    detectMobile() {\n      if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n        this.isMobile = true;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\nhtml {\n  height: 100%;\n}\n\n.logo {\n  display: flex;\n  margin-top: -100px;\n  margin-left: 30px;\n\n  margin-bottom: 100px;\n}\n\n.logo .logo-section {\n  width: 60px;\n  height: 60px;\n}\n\n.logo .logo-title {\n  margin: 15px;\n  font-size: 26px;\n  text-transform: uppercase;\n  font-weight: 700;\n}\n\n.section-2 .button-wrapper {\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.button-custom-new {\n  border-radius: 10px !important;\n  font-size: 15px !important;\n  -webkit-transition: all 0.3s linear;\n  transition: all 0.3s linear;\n  flex: 1 0 100%;\n  height: 44px;\n}\n\n.line-2 span .text-color {\n  color: #00aaa6;\n}\n\n.button-wrapper {\n  margin-bottom: 40px;\n}\n\n#connectBtn {\n  border-radius: 20px !important;\n  display: inline-block;\n  line-height: 34px;\n  white-space: nowrap;\n  cursor: pointer;\n  border: none;\n  background-image: linear-gradient(-90deg, rgb(58, 179, 176) 0%, rgb(110, 99, 157) 100%);\n  color: #151505;\n  -webkit-appearance: none;\n  text-align: center;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  outline: none;\n  margin: 0;\n  -webkit-transition: 0.1s;\n  transition: 0.1s;\n  font-weight: 400;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  padding: 0;\n\n  font-size: 22px !important;\n  font-weight: 500;\n  font-family: \"Arial\";\n}\n\n#connectBtn:active,\n#connectBtn:focus,\n#connectBtn:hover {\n  background-size: 200% auto;\n  background-position: 100%;\n  background-image: linear-gradient(90deg, rgb(58, 179, 176) 0%, rgb(110, 99, 157) 100%);\n  color: #ffffffd3;\n  transition: all 0.1s linear;\n}\n</style>\n"],"sourceRoot":"src/components"}]}