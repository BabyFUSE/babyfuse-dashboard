{"remainingRequest":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cheynehayworth/projects/bbfusedash/dashboard/src/pages/Dashboard.vue?vue&type=template&id=27be3fd9&","dependencies":[{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/src/pages/Dashboard.vue","mtime":1651117920307},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1646000871065},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1650102991284},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1646000871065},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1650102991284}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}