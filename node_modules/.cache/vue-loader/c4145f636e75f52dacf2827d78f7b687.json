{"remainingRequest":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cheynehayworth/projects/bbfusedash/dashboard/src/components/Dashboard/Statistic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/src/components/Dashboard/Statistic.vue","mtime":1649053294305},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1649036669776},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/babel-loader/lib/index.js","mtime":1649036668310},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1649036669776},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/vue-loader/lib/index.js","mtime":1649036669290}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IENPTlRSQUNUX0FERFJFU1MsIEJVUk5fQUREUkVTUyB9IGZyb20gIkAvY29uc3RhbnRzIjsKaW1wb3J0IE1ldGFtYXNrU2VydmljZSBmcm9tICJAL01ldGFtYXNrU2VydmljZSI7CmltcG9ydCB7IGV0aGVycywgdXRpbHMgfSBmcm9tICJldGhlcnMiOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlN0YXRpc3RpYyIsCiAgcHJvcHM6IHsKICAgIGNvbnRyYWN0OiB7CiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAogICAgaHVuZHJlZHRob3VzYW5kbWthdHVzZDogewogICAgICBkZWZhdWx0OiAiLi4uIiwKICAgIH0sCiAgICB0b3RhbGxpcXVpZGl0eXBvb2x1c2Q6IHsKICAgICAgZGVmYXVsdDogIi4uLiIsCiAgICB9LAogICAgdG90YWxibmJpbnBvb2w6IHsKICAgICAgZGVmYXVsdDogIi4uLiIsCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1rYXRBZGRyZXNzOiBDT05UUkFDVF9BRERSRVNTLAogICAgICBtYXJrZXRDYXA6ICIuLi4iLAogICAgICBjdXJyZW50Q2lyY3VsYXJpbmdCYWxhbmNlOiAiLi4uIiwKICAgICAgY29udHJhY3RCTkJSZXdhcmRQb29sOiAiLi4uIiwKICAgICAgcHJvdmlkZXI6IG51bGwsCiAgICAgIHRvdGFsQnVybjogIi4uLiIsCiAgICAgIHRva2VuU3ltYm9sOiAiIiwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbInNpZ25lckFkZHJlc3MiXSksCiAgICAuLi5tYXBHZXR0ZXJzKFsid2FsbGV0UHJvdmlkZXJUeXBlIl0pLAogIH0sCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIHRoaXMuJGxvYWRpbmcodHJ1ZSk7CiAgICB0aGlzLmxvYWRDb250cmFjdEluZm8oKTsKICAgIHRoaXMuJGxvYWRpbmcoZmFsc2UpOwogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgbG9hZENvbnRyYWN0SW5mbygpIHsKICAgICAgY29uc29sZS5sb2coInN0YXRpc3RpY3MgbG9hZGluZyIpOwoKICAgICAgY29uc3Qgc2VydmljZSA9IG5ldyBNZXRhbWFza1NlcnZpY2UoYXdhaXQgTWV0YW1hc2tTZXJ2aWNlLmNyZWF0ZVdhbGxldFByb3ZpZGVyRnJvbVR5cGUodGhpcy53YWxsZXRQcm92aWRlclR5cGUpKTsKICAgICAgYXdhaXQgc2VydmljZS5pbml0aWFsaXplKCk7CgogICAgICB0aGlzLnByb3ZpZGVyID0gc2VydmljZS5nZXRXZWIzUHJvdmlkZXIoKTsKCiAgICAgIHRoaXMudG9rZW5TeW1ib2wgPSBhd2FpdCB0aGlzLmNvbnRyYWN0LnN5bWJvbCgpOwoKICAgICAgdGhpcy5tYXJrZXRDYXAgPSBwYXJzZUZsb2F0KGF3YWl0IHRoaXMuY2FsY3VsYXRlTWFya2V0Q2FwKHNlcnZpY2UpKS50b0ZpeGVkKDIpOwoKICAgICAgdGhpcy50b3RhbEJ1cm4gPSBhd2FpdCB0aGlzLmNhbGN1bGF0ZVRvdGFsQnVyblBlcmNlbnQoc2VydmljZSk7CgogICAgICB0aGlzLmN1cnJlbnRDaXJjdWxhcmluZ0JhbGFuY2UgPSBwYXJzZUZsb2F0KAogICAgICAgIHV0aWxzLmZvcm1hdFVuaXRzKGF3YWl0IHRoaXMuZ2V0Q3VycmVudENpcmN1bGFyaW5nQmFsYW5jZSgpLCAxOCkKICAgICAgKS50b0ZpeGVkKDIpOwoKICAgICAgY29uc3QgY2FrZVRva2VuQ29udHJhY3QgPSBhd2FpdCBzZXJ2aWNlLmdldENha2VUb2tlbkNvbnRyYWN0SW5zdGFuY2UoQ09OVFJBQ1RfQUREUkVTUyk7CiAgICAgIHRoaXMuY29udHJhY3RCTkJSZXdhcmRQb29sID0gcGFyc2VGbG9hdCgKICAgICAgICB1dGlscy5mb3JtYXRVbml0cyhhd2FpdCBjYWtlVG9rZW5Db250cmFjdC5iYWxhbmNlT2YoQ09OVFJBQ1RfQUREUkVTUyksIDE4KQogICAgICApLnRvRml4ZWQoMik7CiAgICB9LAogICAgYXN5bmMgY2FsY3VsYXRlTWFya2V0Q2FwKHNlcnZpY2UpIHsKICAgICAgY29uc3QgY2lyY3VsYXJpbmdCYWxhbmNlID0gYXdhaXQgdGhpcy5nZXRDdXJyZW50Q2lyY3VsYXJpbmdCYWxhbmNlKCk7CgogICAgICByZXR1cm4gdXRpbHMuZm9ybWF0VW5pdHMoYXdhaXQgc2VydmljZS5nZXRNa2F0VmFsdWVJbkJVU0QoY2lyY3VsYXJpbmdCYWxhbmNlKSwgMTgpOwogICAgfSwKICAgIGFzeW5jIGNhbGN1bGF0ZVRvdGFsQnVyblBlcmNlbnQoKSB7CiAgICAgIGNvbnN0IHsgdG90YWwsIHplcm8sIGJ1cm4gfSA9IGF3YWl0IHRoaXMuZ2V0Q2lyY3VsYXJpbmdCYWxhbmNlcygpOwogICAgICByZXR1cm4gKCgoemVybyArIGJ1cm4pICogMTAwKSAvIHRvdGFsKS50b0ZpeGVkKDIpOwogICAgfSwKICAgIGFzeW5jIGdldEN1cnJlbnRDaXJjdWxhcmluZ0JhbGFuY2UoKSB7CiAgICAgIGNvbnN0IHsgdG90YWwsIHplcm8sIGJ1cm4gfSA9IGF3YWl0IHRoaXMuZ2V0Q2lyY3VsYXJpbmdCYWxhbmNlcygpOwogICAgICByZXR1cm4gdG90YWwuc3ViKGJ1cm4pLnN1Yih6ZXJvKTsKICAgIH0sCiAgICBhc3luYyBnZXRDaXJjdWxhcmluZ0JhbGFuY2VzKCkgewogICAgICBsZXQgdG90YWwgPSBhd2FpdCB0aGlzLmNvbnRyYWN0LnRvdGFsU3VwcGx5KCk7CiAgICAgIGxldCB6ZXJvID0gYXdhaXQgdGhpcy5jb250cmFjdC5iYWxhbmNlT2YoIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIpOwogICAgICBsZXQgYnVybiA9IGF3YWl0IHRoaXMuY29udHJhY3QuYmFsYW5jZU9mKEJVUk5fQUREUkVTUyk7CgogICAgICByZXR1cm4geyB0b3RhbCwgemVybywgYnVybiB9OwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Statistic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Statistic.vue","sourceRoot":"src/components/Dashboard","sourcesContent":["<template>\n  <div class=\"statistic-all\">\n    <div class=\"statistic-p1\">\n      <div class=\"row\">\n        <div class=\"item-statistic col-sm-6 col-md-3\">\n          <div class=\"text-1\">Symbol</div>\n          <div class=\"text-2\">{{ tokenSymbol }}</div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-sm-0\">\n          <div class=\"text-1\">Total Supply</div>\n          <div class=\"text-2\">100,000,000,000 {{ tokenSymbol }}</div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-md-0\">\n          <div class=\"text-1\">Total Burned</div>\n          <div class=\"text-2\">{{ totalBurn }} %</div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-md-0\">\n          <div class=\"text-1\">Token Address</div>\n          <div class=\"text-2\">\n            <a\n              :href=\"`https://explorer.fuse.io/token/${mkatAddress}`\"\n              target=\"_blank\"\n              style=\"color: rgb(5, 0, 111)); font-size: 20px; word-break: break-all\"\n            >\n              view on Fuse Explorer\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"row-2 hide-on-mobile\"></div>\n      <div class=\"row\">\n        <div class=\"item-statistic col-sm-6 col-md-3\">\n          <div class=\"text-1\">Volume (24h)</div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-sm-0\">\n          <div class=\"text-1\">Market Cap</div>\n          <div class=\"text-2\">\n            $\n            <span class=\"card-panel-num\"> {{ marketCap }} </span>\n          </div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-md-0\">\n          <div class=\"text-1\">Current Circulating Supply</div>\n          <div class=\"text-2\">{{ currentCircularingBalance }} {{ tokenSymbol }}</div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-md-0\">\n          <div class=\"text-1\">Contract fUSD reward pool</div>\n          <div class=\"text-2\">{{ contractBNBRewardPool }} FUSE</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"statistic-p1 mt-25\">\n      <div class=\"row\">\n        <div class=\"item-statistic col-sm-6 col-md-3\">\n          <div class=\"text-1\">100,000 {{ tokenSymbol }} price</div>\n          <div class=\"text-2\">\n            <span class=\"card-panel-num\">$ {{ hundredthousandmkatusd }} </span>\n          </div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-sm-0\">\n          <div class=\"text-1\">Total Liquidity Pool</div>\n          <div class=\"text-2\">\n            <span class=\"card-panel-num\"> $ {{ totalliquiditypoolusd }} </span>\n          </div>\n        </div>\n        <div class=\"item-statistic col-sm-6 col-md-3 mt-3 mt-md-0\">\n          <div class=\"text-1\">Total FUSE in liquidity pool</div>\n          <div class=\"text-2\">{{ totalbnbinpool }} FUSE</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"hidden-input el-input el-input--medium\">\n      <input id=\"copy-value-max\" type=\"text\" autocomplete=\"off\" class=\"el-input__inner\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { CONTRACT_ADDRESS, BURN_ADDRESS } from \"@/constants\";\nimport MetamaskService from \"@/MetamaskService\";\nimport { ethers, utils } from \"ethers\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"Statistic\",\n  props: {\n    contract: {\n      default: null,\n    },\n    hundredthousandmkatusd: {\n      default: \"...\",\n    },\n    totalliquiditypoolusd: {\n      default: \"...\",\n    },\n    totalbnbinpool: {\n      default: \"...\",\n    },\n  },\n  data() {\n    return {\n      mkatAddress: CONTRACT_ADDRESS,\n      marketCap: \"...\",\n      currentCircularingBalance: \"...\",\n      contractBNBRewardPool: \"...\",\n      provider: null,\n      totalBurn: \"...\",\n      tokenSymbol: \"\",\n    };\n  },\n  computed: {\n    ...mapGetters([\"signerAddress\"]),\n    ...mapGetters([\"walletProviderType\"]),\n  },\n  async mounted() {\n    this.$loading(true);\n    this.loadContractInfo();\n    this.$loading(false);\n  },\n  methods: {\n    async loadContractInfo() {\n      console.log(\"statistics loading\");\n\n      const service = new MetamaskService(await MetamaskService.createWalletProviderFromType(this.walletProviderType));\n      await service.initialize();\n\n      this.provider = service.getWeb3Provider();\n\n      this.tokenSymbol = await this.contract.symbol();\n\n      this.marketCap = parseFloat(await this.calculateMarketCap(service)).toFixed(2);\n\n      this.totalBurn = await this.calculateTotalBurnPercent(service);\n\n      this.currentCircularingBalance = parseFloat(\n        utils.formatUnits(await this.getCurrentCircularingBalance(), 18)\n      ).toFixed(2);\n\n      const cakeTokenContract = await service.getCakeTokenContractInstance(CONTRACT_ADDRESS);\n      this.contractBNBRewardPool = parseFloat(\n        utils.formatUnits(await cakeTokenContract.balanceOf(CONTRACT_ADDRESS), 18)\n      ).toFixed(2);\n    },\n    async calculateMarketCap(service) {\n      const circularingBalance = await this.getCurrentCircularingBalance();\n\n      return utils.formatUnits(await service.getMkatValueInBUSD(circularingBalance), 18);\n    },\n    async calculateTotalBurnPercent() {\n      const { total, zero, burn } = await this.getCircularingBalances();\n      return (((zero + burn) * 100) / total).toFixed(2);\n    },\n    async getCurrentCircularingBalance() {\n      const { total, zero, burn } = await this.getCircularingBalances();\n      return total.sub(burn).sub(zero);\n    },\n    async getCircularingBalances() {\n      let total = await this.contract.totalSupply();\n      let zero = await this.contract.balanceOf(\"0x0000000000000000000000000000000000000000\");\n      let burn = await this.contract.balanceOf(BURN_ADDRESS);\n\n      return { total, zero, burn };\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]}]}