{"remainingRequest":"/Users/cheynehayworth/projects/BabyCake-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cheynehayworth/projects/BabyCake-dashboard/src/components/WalletConnect.vue?vue&type=style&index=0&id=911bfe9e&scoped=true&lang=css&","dependencies":[{"path":"/Users/cheynehayworth/projects/BabyCake-dashboard/src/components/WalletConnect.vue","mtime":1649041211347},{"path":"/Users/cheynehayworth/projects/BabyCake-dashboard/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1649036668174},{"path":"/Users/cheynehayworth/projects/BabyCake-dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1649036669372},{"path":"/Users/cheynehayworth/projects/BabyCake-dashboard/node_modules/postcss-loader/src/index.js","mtime":1649036668295},{"path":"/Users/cheynehayworth/projects/BabyCake-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1649036669776},{"path":"/Users/cheynehayworth/projects/BabyCake-dashboard/node_modules/vue-loader/lib/index.js","mtime":1649036669290}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaHRtbCB7CiAgaGVpZ2h0OiAxMDAlOwp9CgoubG9nbyB7CiAgZGlzcGxheTogZmxleDsKICBtYXJnaW4tdG9wOiAtMTAwcHg7CiAgbWFyZ2luLWxlZnQ6IDMwcHg7CgogIG1hcmdpbi1ib3R0b206IDEwMHB4Owp9CgoubG9nbyAubG9nby1zZWN0aW9uIHsKICB3aWR0aDogNjBweDsKICBoZWlnaHQ6IDYwcHg7Cn0KCi5sb2dvIC5sb2dvLXRpdGxlIHsKICBtYXJnaW46IDE1cHg7CiAgZm9udC1zaXplOiAyNnB4OwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CiAgZm9udC13ZWlnaHQ6IDcwMDsKfQoKLnNlY3Rpb24tMiAuYnV0dG9uLXdyYXBwZXIgewogIG1hcmdpbi10b3A6IDIwcHg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7Cn0KCi5idXR0b24tY3VzdG9tLW5ldyB7CiAgYm9yZGVyLXJhZGl1czogMTBweCAhaW1wb3J0YW50OwogIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50OwogIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyOwogIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjsKICBmbGV4OiAxIDAgMTAwJTsKICBoZWlnaHQ6IDQ0cHg7Cn0KCi5saW5lLTIgc3BhbiAudGV4dC1jb2xvciB7CiAgY29sb3I6ICMwMGFhYTY7Cn0KCi5idXR0b24td3JhcHBlciB7CiAgbWFyZ2luLWJvdHRvbTogNDBweDsKfQoKI2Nvbm5lY3RCdG4gewogIGJvcmRlci1yYWRpdXM6IDIwcHggIWltcG9ydGFudDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbGluZS1oZWlnaHQ6IDM0cHg7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgYm9yZGVyOiBub25lOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgtOTBkZWcsIHJnYig1OCwgMTc5LCAxNzYpIDAlLCByZ2IoMTEwLCA5OSwgMTU3KSAxMDAlKTsKICBjb2xvcjogI2M0YzZlNzsKICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIG91dGxpbmU6IG5vbmU7CiAgbWFyZ2luOiAwOwogIC13ZWJraXQtdHJhbnNpdGlvbjogMC4xczsKICB0cmFuc2l0aW9uOiAwLjFzOwogIGZvbnQtd2VpZ2h0OiA0MDA7CiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsKICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOwogIC1tcy11c2VyLXNlbGVjdDogbm9uZTsKICBwYWRkaW5nOiAwOwoKICBmb250LXNpemU6IDIycHggIWltcG9ydGFudDsKICBmb250LXdlaWdodDogNTAwOwogIGZvbnQtZmFtaWx5OiAiUmFuY2hvIiwgY3Vyc2l2ZTsKfQoKI2Nvbm5lY3RCdG46YWN0aXZlLAojY29ubmVjdEJ0bjpmb2N1cywKI2Nvbm5lY3RCdG46aG92ZXIgewogIGJhY2tncm91bmQtc2l6ZTogMjAwJSBhdXRvOwogIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCU7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2IoNTgsIDE3OSwgMTc2KSAwJSwgcmdiKDExMCwgOTksIDE1NykgMTAwJSk7CiAgY29sb3I6ICNmZmZmZmZkMzsKICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBsaW5lYXI7Cn0K"},{"version":3,"sources":["WalletConnect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WalletConnect.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section class=\"connect-wallet\">\n    <div class=\"logo\">\n      <img src=\"@/assets/images/beaglecakeLogo.png\" class=\"logo-section\" />\n      <h1 class=\"logo-title\">babyfuse</h1>\n    </div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"section-2\">\n          <div class=\"connect-to-wallet\">\n            <img src=\"@/assets/images/beaglecakeLogo.png\" class=\"logo-section\" />\n            <div class=\"text-show-1\">Welcome to the Baby Fuse Dapp</div>\n            <div class=\"content-main\">\n              <div class=\"text-1\">You are not connected to Baby Fuse Dapp yet</div>\n              <div class=\"line-2\">\n                To use the Dapp, make sure: <br /><span\n                  >You are using the <span class=\"text-color\">Fuse Network</span> network</span\n                ><br /><span>and you need to connect wallet to use</span><br />\n                <div style=\"margin-top: 40px;\">\n                  <a href=\"https://tutorials.fuse.io/tutorials/network-tutorials/adding-fuse-network-to-metamask\" target=\"_blank\"> Metamask</a\n                  ><br />\n                </div>\n              </div>\n            </div>\n            <div class=\"button-wrapper\">\n              <button\n                id=\"connectBtn\"\n                type=\"button\"\n                class=\"el-button button-custom-new el-button--primary el-button--medium\"\n                @click=\"connectMetamask()\"\n              >\n                <i class=\"el-icon-connection\"></i>\n                <span>Connect to a wallet </span>\n              </button>\n              <br />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { ethers } from \"ethers\";\nimport { mapGetters } from \"vuex\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { WalletType } from \"../MetamaskService\";\n\nexport default {\n  name: \"WalletConnect\",\n\n  data() {\n    return {\n      isMobile: false,\n    };\n  },\n  computed: {\n    ...mapGetters([\"signerAddress\"]),\n    ...mapGetters([\"walletProviderType\"]),\n  },\n  mounted() {\n    this.detectMobile();\n\n    console.log(\"Signer address\", this.signerAddress);\n\n    if (this.signerAddress && this.walletProviderType) {\n      this.$router.replace({ path: \"dashboard\" });\n    }\n  },\n  methods: {\n    async connectMetamask() {\n      if (window.ethereum != undefined) {\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        this.$store.commit(\"updateSignerAddress\", accounts[0]);\n        this.$store.commit(\"updateWalletProviderType\", WalletType.Metamask);\n\n        this.$router.push({ path: \"dashboard\" });\n      } else {\n        if (!this.isAndroid && !this.isIos) alert(\"Please install MetaMask!\");\n      }\n    },\n    async connectWalletConnect() {\n      const walletConnectProvider = new WalletConnectProvider({\n        rpc: { 56: \"https://bsc-dataseed.binance.org/\" },\n        chainId: 56,\n        qrcode: true, // Required\n      });\n\n      await walletConnectProvider.enable();\n\n      await this.updateDataOnAccountChange(walletConnectProvider);\n\n      this.$router.push({ path: \"dashboard\" });\n\n      // Subscribe to accounts change\n      walletConnectProvider.on(\"accountsChanged\", accounts => {\n        this.updateDataOnAccountChange(walletConnectProvider);\n      });\n\n      // Subscribe to chainId change\n      walletConnectProvider.on(\"chainChanged\", chainId => {\n        console.log(\"chain changed: \", chainId);\n      });\n\n      // Subscribe to session disconnection\n      walletConnectProvider.on(\"disconnect\", (code, reason) => {\n        console.log(\"Disconnect\", reason);\n\n        this.$store.commit(\"logout\");\n        this.$router.push({ path: \"connect-wallet\" });\n      });\n    },\n    async updateDataOnAccountChange(walletConnectProvider) {\n      const provider = new ethers.providers.Web3Provider(walletConnectProvider);\n\n      console.log(\"web3 provider:\", provider);\n      console.log(\"wallet provider:\", walletConnectProvider);\n\n      const signer = provider.getSigner();\n      console.log(\"signer:\", signer);\n      const address = await signer.getAddress();\n\n      console.log(\"signer address:\", address);\n\n      this.$store.commit(\"updateSignerAddress\", address);\n      this.$store.commit(\"updateWalletProviderType\", WalletType.WalletConnect);\n    },\n    detectMobile() {\n      if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n        this.isMobile = true;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\nhtml {\n  height: 100%;\n}\n\n.logo {\n  display: flex;\n  margin-top: -100px;\n  margin-left: 30px;\n\n  margin-bottom: 100px;\n}\n\n.logo .logo-section {\n  width: 60px;\n  height: 60px;\n}\n\n.logo .logo-title {\n  margin: 15px;\n  font-size: 26px;\n  text-transform: uppercase;\n  font-weight: 700;\n}\n\n.section-2 .button-wrapper {\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.button-custom-new {\n  border-radius: 10px !important;\n  font-size: 15px !important;\n  -webkit-transition: all 0.3s linear;\n  transition: all 0.3s linear;\n  flex: 1 0 100%;\n  height: 44px;\n}\n\n.line-2 span .text-color {\n  color: #00aaa6;\n}\n\n.button-wrapper {\n  margin-bottom: 40px;\n}\n\n#connectBtn {\n  border-radius: 20px !important;\n  display: inline-block;\n  line-height: 34px;\n  white-space: nowrap;\n  cursor: pointer;\n  border: none;\n  background-image: linear-gradient(-90deg, rgb(58, 179, 176) 0%, rgb(110, 99, 157) 100%);\n  color: #151505;\n  -webkit-appearance: none;\n  text-align: center;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  outline: none;\n  margin: 0;\n  -webkit-transition: 0.1s;\n  transition: 0.1s;\n  font-weight: 400;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  padding: 0;\n\n  font-size: 22px !important;\n  font-weight: 500;\n  font-family: \"Rancho\", cursive;\n}\n\n#connectBtn:active,\n#connectBtn:focus,\n#connectBtn:hover {\n  background-size: 200% auto;\n  background-position: 100%;\n  background-image: linear-gradient(90deg, rgb(58, 179, 176) 0%, rgb(110, 99, 157) 100%);\n  color: #ffffffd3;\n  transition: all 0.1s linear;\n}\n</style>\n"]}]}