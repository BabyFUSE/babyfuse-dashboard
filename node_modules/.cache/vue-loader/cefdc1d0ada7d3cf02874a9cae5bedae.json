{"remainingRequest":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cheynehayworth/projects/bbfusedash/dashboard/src/pages/Dashboard.vue?vue&type=template&id=1d81e2c0&","dependencies":[{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/src/pages/Dashboard.vue","mtime":1649053404983},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1649036669776},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1649036669386},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1649036669776},{"path":"/Users/cheynehayworth/projects/bbfusedash/dashboard/node_modules/vue-loader/lib/index.js","mtime":1649036669290}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}